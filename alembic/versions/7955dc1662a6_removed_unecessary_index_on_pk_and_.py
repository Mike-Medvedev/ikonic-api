"""removed unecessary index on pk and added fk to user/claim_user id and check constraints to trip.

Revision ID: 7955dc1662a6
Revises: 40880e19ca2f
Create Date: 2025-06-22 20:00:12.212558

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '7955dc1662a6'
down_revision: str | None = '40880e19ca2f'
branch_labels: str | list[str] | None = None
depends_on: str | list[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_public_friendships_id'), table_name='friendships')
    op.drop_constraint(op.f('friendships_requester_id_fkey'), 'friendships', type_='foreignkey')
    op.drop_constraint(op.f('friendships_addressee_id_fkey'), 'friendships', type_='foreignkey')
    op.create_foreign_key(None, 'friendships', 'users', ['requester_id'], ['id'], source_schema='public', referent_schema='public')
    op.create_foreign_key(None, 'friendships', 'users', ['addressee_id'], ['id'], source_schema='public', referent_schema='public')
    op.drop_constraint(op.f('invitations_trip_id_fkey'), 'invitations', type_='foreignkey')
    op.drop_constraint(op.f('invitations_user_id_fkey'), 'invitations', type_='foreignkey')
    op.create_foreign_key(None, 'invitations', 'trips', ['trip_id'], ['id'], source_schema='public', referent_schema='public', ondelete='CASCADE')
    op.create_foreign_key(None, 'invitations', 'users', ['user_id'], ['id'], source_schema='public', referent_schema='public', ondelete='SET NULL')
    op.create_foreign_key(None, 'invitations', 'users', ['claim_user_id'], ['id'], source_schema='public', referent_schema='public')
    op.drop_constraint(op.f('passengers_car_id_fkey'), 'passengers', type_='foreignkey')
    op.drop_constraint(op.f('passengers_user_id_fkey'), 'passengers', type_='foreignkey')
    op.create_foreign_key(None, 'passengers', 'cars', ['car_id'], ['id'], source_schema='public', referent_schema='public', ondelete='CASCADE')
    op.create_foreign_key(None, 'passengers', 'users', ['user_id'], ['id'], source_schema='public', referent_schema='public', ondelete='CASCADE')
    op.drop_constraint(op.f('trips_owner_fkey'), 'trips', type_='foreignkey')
    op.create_foreign_key(None, 'trips', 'users', ['owner'], ['id'], source_schema='public', referent_schema='public', ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'trips', schema='public', type_='foreignkey')
    op.create_foreign_key(op.f('trips_owner_fkey'), 'trips', 'users', ['owner'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'invitations', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'invitations', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'invitations', schema='public', type_='foreignkey')
    op.create_foreign_key(op.f('invitations_user_id_fkey'), 'invitations', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(op.f('invitations_trip_id_fkey'), 'invitations', 'trips', ['trip_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'friendships', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'friendships', schema='public', type_='foreignkey')
    op.create_foreign_key(op.f('friendships_addressee_id_fkey'), 'friendships', 'users', ['addressee_id'], ['id'])
    op.create_foreign_key(op.f('friendships_requester_id_fkey'), 'friendships', 'users', ['requester_id'], ['id'])
    op.create_index(op.f('ix_public_friendships_id'), 'friendships', ['id'], unique=False)
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('error_message', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    
    # ### end Alembic commands ###
