"""adding timestamps to tables.

Revision ID: 3df643050173
Revises: a777ccc563e7
Create Date: 2025-06-08 18:50:34.434832

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '3df643050173'
down_revision: str | None = 'a777ccc563e7'
branch_labels: str | list[str] | None = None
depends_on: str | list[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('cars', sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.add_column('cars', sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.alter_column('cars', 'trip_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.alter_column('cars', 'owner',
               existing_type=sa.UUID(),
               nullable=False)
    op.alter_column('cars', 'seat_count',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.create_index(op.f('ix_public_cars_id'), 'cars', ['id'], unique=False, schema='public')
    op.drop_constraint(op.f('cars_owner_fkey'), 'cars', type_='foreignkey')
    op.drop_constraint(op.f('cars_trip_id_fkey'), 'cars', type_='foreignkey')
    op.create_foreign_key(None, 'cars', 'users', ['owner'], ['id'], source_schema='public', referent_schema='public')
    op.create_foreign_key(None, 'cars', 'trips', ['trip_id'], ['id'], source_schema='public', referent_schema='public', ondelete='CASCADE')
    op.add_column('friendships', sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.add_column('friendships', sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))

    op.create_index(op.f('ix_public_friendships_addressee_id'), 'friendships', ['addressee_id'], unique=False, schema='public')
    op.create_index(op.f('ix_public_friendships_id'), 'friendships', ['id'], unique=False, schema='public')
    op.create_index(op.f('ix_public_friendships_requester_id'), 'friendships', ['requester_id'], unique=False, schema='public')
    op.drop_constraint(op.f('friendships_requester_id_fkey'), 'friendships', type_='foreignkey')
    op.drop_constraint(op.f('friendships_addressee_id_fkey'), 'friendships', type_='foreignkey')
    op.create_foreign_key(None, 'friendships', 'users', ['requester_id'], ['id'], source_schema='public', referent_schema='public')
    op.create_foreign_key(None, 'friendships', 'users', ['addressee_id'], ['id'], source_schema='public', referent_schema='public')
    op.add_column('invitations', sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.add_column('invitations', sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.alter_column('invitations', 'registered_phone',
               existing_type=sa.TEXT(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               existing_nullable=True)
    op.create_index(op.f('ix_public_invitations_id'), 'invitations', ['id'], unique=False, schema='public')
    op.drop_constraint(op.f('invitations_trip_id_fkey'), 'invitations', type_='foreignkey')
    op.drop_constraint(op.f('invitations_user_id_fkey'), 'invitations', type_='foreignkey')
    op.create_foreign_key(None, 'invitations', 'trips', ['trip_id'], ['id'], source_schema='public', referent_schema='public', ondelete='CASCADE')
    op.create_foreign_key(None, 'invitations', 'users', ['user_id'], ['id'], source_schema='public', referent_schema='public', ondelete='CASCADE')
    op.add_column('passengers', sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.add_column('passengers', sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.drop_constraint(op.f('passengers_user_id_fkey'), 'passengers', type_='foreignkey')
    op.drop_constraint(op.f('passengers_car_id_fkey'), 'passengers', type_='foreignkey')
    op.create_foreign_key(None, 'passengers', 'cars', ['car_id'], ['id'], source_schema='public', referent_schema='public', ondelete='CASCADE')
    op.create_foreign_key(None, 'passengers', 'users', ['user_id'], ['id'], source_schema='public', referent_schema='public', ondelete='CASCADE')
    op.add_column('trips', sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.add_column('trips', sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.alter_column('trips', 'title',
               existing_type=sa.TEXT(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               existing_nullable=False)
    op.alter_column('trips', 'desc',
               existing_type=sa.TEXT(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               existing_nullable=True)
    op.alter_column('trips', 'trip_image_storage_path',
               existing_type=sa.TEXT(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               existing_nullable=True)
    op.create_index(op.f('ix_public_trips_id'), 'trips', ['id'], unique=False, schema='public')
    op.drop_constraint(op.f('trips_owner_fkey'), 'trips', type_='foreignkey')
    op.create_foreign_key(None, 'trips', 'users', ['owner'], ['id'], source_schema='public', referent_schema='public', ondelete='CASCADE')
    op.add_column('users', sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.add_column('users', sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.alter_column('users', 'avatar_public_url',
               existing_type=sa.TEXT(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               existing_nullable=True)
    op.drop_constraint(op.f('users_phone_fkey'), 'users', type_='foreignkey')
    op.drop_constraint(op.f('users_id_fkey'), 'users', type_='foreignkey')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_foreign_key(op.f('users_id_fkey'), 'users', 'users', ['id'], ['id'], referent_schema='auth', ondelete='CASCADE')
    op.create_foreign_key(op.f('users_phone_fkey'), 'users', 'users', ['phone'], ['phone'], referent_schema='auth')
    op.alter_column('users', 'avatar_public_url',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.drop_column('users', 'updated_at')
    op.drop_column('users', 'created_at')
    op.drop_constraint(None, 'trips', schema='public', type_='foreignkey')
    op.create_foreign_key(op.f('trips_owner_fkey'), 'trips', 'users', ['owner'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_public_trips_id'), table_name='trips', schema='public')
    op.alter_column('trips', 'trip_image_storage_path',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('trips', 'desc',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('trips', 'title',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.drop_column('trips', 'updated_at')
    op.drop_column('trips', 'created_at')
    op.drop_constraint(None, 'passengers', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'passengers', schema='public', type_='foreignkey')
    op.create_foreign_key(op.f('passengers_car_id_fkey'), 'passengers', 'cars', ['car_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(op.f('passengers_user_id_fkey'), 'passengers', 'users', ['user_id'], ['id'])
    op.drop_column('passengers', 'updated_at')
    op.drop_column('passengers', 'created_at')
    op.drop_constraint(None, 'invitations', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'invitations', schema='public', type_='foreignkey')
    op.create_foreign_key(op.f('invitations_user_id_fkey'), 'invitations', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(op.f('invitations_trip_id_fkey'), 'invitations', 'trips', ['trip_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_public_invitations_id'), table_name='invitations', schema='public')
    op.alter_column('invitations', 'registered_phone',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.drop_column('invitations', 'updated_at')
    op.drop_column('invitations', 'created_at')
    op.drop_constraint(None, 'friendships', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'friendships', schema='public', type_='foreignkey')
    op.create_foreign_key(op.f('friendships_addressee_id_fkey'), 'friendships', 'users', ['addressee_id'], ['id'])
    op.create_foreign_key(op.f('friendships_requester_id_fkey'), 'friendships', 'users', ['requester_id'], ['id'])
    op.drop_index(op.f('ix_public_friendships_requester_id'), table_name='friendships', schema='public')
    op.drop_index(op.f('ix_public_friendships_id'), table_name='friendships', schema='public')
    op.drop_index(op.f('ix_public_friendships_addressee_id'), table_name='friendships', schema='public')
    op.drop_column('friendships', 'updated_at')
    op.drop_column('friendships', 'created_at')
    op.drop_constraint(None, 'cars', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'cars', schema='public', type_='foreignkey')
    op.create_foreign_key(op.f('cars_trip_id_fkey'), 'cars', 'trips', ['trip_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(op.f('cars_owner_fkey'), 'cars', 'users', ['owner'], ['id'])
    op.drop_index(op.f('ix_public_cars_id'), table_name='cars', schema='public')
    op.alter_column('cars', 'seat_count',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('cars', 'owner',
               existing_type=sa.UUID(),
               nullable=True)
    op.alter_column('cars', 'trip_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.drop_column('cars', 'updated_at')
    op.drop_column('cars', 'created_at')
    # ### end Alembic commands ###
